#!/bin/bash

# Color variables
YELLOW='\033[1;33m'
RED='\033[1;31m'
RESET='\033[0m'

SHOWN=false

# Detect Linux distribution
detect_linux_distribution() {
    if [[ -f /etc/redhat-release ]]; then
        _release="centos"
    elif grep -qiE "debian|ubuntu" /etc/issue; then
        _release="debian"
    elif grep -qiE "centos|red hat|redhat" /etc/issue; then
        _release="centos"
    elif grep -qiE "debian|ubuntu" /proc/version; then
        _release="debian"
    elif grep -qiE "centos|red hat|redhat" /proc/version; then
        _release="centos"
    else
        echo -e "${RED}CentOS, Debian, or Ubuntu not detected. The script may not work correctly.${RESET}"
        exit 1
    fi
}

# Function to display usage instructions
show_usage() {
    echo ""
    echo -e "${YELLOW}Usage: autoclean <command> [options]${RESET}"
    echo -e "${YELLOW}Commands:${RESET}"
    echo -e "${YELLOW}  cachecln <value>   Set cache clean threshold (1-3)${RESET}"
    echo -e "${YELLOW}  ramtrig <value>    Set RAM trigger value (5-90)${RESET}"
    echo -e "${YELLOW}  swppns <value>     Set swappiness value (0-100)${RESET}"
    echo -e "${YELLOW}Examples:${RESET}"
    echo -e "${YELLOW}  autoclean cachecln 1${RESET}"
    echo -e "${YELLOW}  autoclean ramtrig 45${RESET}"
    echo -e "${YELLOW}  autoclean swppns 27${RESET}"
    echo ""
    echo -e "${YELLOW}Or pass multiple arguments:${RESET}"
    echo -e "${YELLOW}  autoclean cachecln 2 ramtrig 34 swppns 37${RESET}"
    echo ""
    exit 1
}

# Function to start the auto-clean.sh script
autoclean_start() {
    # Check if the script is already running
    if pgrep auto-clean.sh > /dev/null; then
        echo -e "${YELLOW}The script is already running.${RESET}"
    else
        /etc/init.d/auto-clean.sh
    fi
}

# Function to stop the auto-clean.sh script
autoclean_stop() {
    pkill auto-clean.sh > /dev/null 2>&1
    echo -e "${YELLOW}Script stopped.${RESET}"
}

# Function to restart the auto-clean.sh script
autoclean_restart() {
    pkill auto-clean.sh
    autoclean_start
}

# Function to remove the auto-clean.sh script
autoclean_remove() {
    if [[ $_release = centos ]]; then
        service auto-clean.sh stop > /dev/null 2>&1
        chkconfig --del auto-clean.sh > /dev/null 2>&1
        rm -rf /etc/init.d/auto-clean.sh
        pkill auto-clean.sh > /dev/null 2>&1
        rm -rf /usr/local/bin/autoclean
        sed -i "s/.*vm.swappiness.*/vm.swappiness/" /etc/sysctl.conf
        sysctl -p /etc/sysctl.conf > /dev/null 2>&1
        echo -e "${YELLOW}The script was removed.${RESET}"
    elif [[ $_release = debian ]] || [[ $_release = ubuntu ]]; then
        update-rc.d -f auto-clean.sh remove > /dev/null 2>&1
        rm -rf /etc/init.d/auto-clean.sh
        pkill auto-clean.sh > /dev/null 2>&1
        rm -rf /usr/local/bin/autoclean
        sed -i "s/.*vm.swappiness.*/vm.swappiness/" /etc/sysctl.conf
        sysctl -p /etc/sysctl.conf > /dev/null 2>&1
        echo -e "${YELLOW}The script was removed.${RESET}"
    fi
}

# Function to display trigger values
trig_values() {
    if [[ $SHOWN == false ]]; then
        echo -e "${YELLOW}Values have been updated:${RESET}"
        echo ""
        echo -e "${YELLOW}cachecln: $cache_cln${RESET}"
        echo -e "${YELLOW}ramtrig: $ram_trig${RESET}"
        echo -e "${YELLOW}swppns: $swpp_ns${RESET}"
        SHOWN=true
    fi
}

# Path to the auto-clean.sh script
script_path="/etc/init.d/auto-clean.sh"

# Process the parameters
while [ "$#" -gt 0 ]; do
    case "$1" in
        cachecln)
            # Check if the second argument is a number between 1 and 3
            if ! [[ "$2" =~ ^[1-3]$ ]]; then
                echo -e "${YELLOW}Invalid value for cachecln. It must be a number between 1 and 3.${RESET}"
                show_usage
            fi
            sed -i "s/_cache_cln=.*/_cache_cln=$2/" "$script_path"
            cache_cln="$2"
            shift 2
            [[ "$#" -eq 0 ]] && trig_values
            ;;
        ramtrig)
            # Check if the second argument is a number between 5 and 90
            if ! [[ "$2" =~ ^(5[0-9]|[1-8][0-9]|90)$ ]]; then
                echo -e "${YELLOW}Invalid value for ramtrig. It must be a number between 5 and 90.${RESET}"
                show_usage
            fi
            sed -i "s/_ram_trig=.*/_ram_trig=$2/" "$script_path"
            ram_trig="$2"
            autoclean_restart
            shift 2
            [[ "$#" -eq 0 ]] && trig_values
            ;;
        swppns)
            # Check if the second argument is a number between 0 and 100
            if ! [[ "$2" =~ ^([0-9]|[1-9][0-9]|100)$ ]]; then
                echo -e "${YELLOW}Invalid value for swappiness. It must be a number between 0 and 100.${RESET}"
                show_usage
            fi
            if ! grep -q "^vm.swappiness" /etc/sysctl.conf; then
                echo "vm.swappiness=$2" >> /etc/sysctl.conf
            else
                sed -i "s/.*vm.swappiness.*/vm.swappiness=$2/" /etc/sysctl.conf
            fi
            sysctl -p /etc/sysctl.conf > /dev/null 2>&1
            swpp_ns="$2"
            autoclean_restart
            shift 2
            [[ "$#" -eq 0 ]] && trig_values
            ;;
        start)
            autoclean_start
            echo -e "${YELLOW}Script started.${RESET}"
            break
            ;;
        stop)
            autoclean_stop
            break
            ;;
        restart)
            autoclean_restart
            echo -e "${YELLOW}Script restarted.${RESET}"
            break
            ;;
        remove)
            detect_linux_distribution
            autoclean_remove
            break
            ;;
        *)
            show_usage
            ;;
    esac
done
